name: Deploy

on:
  push:
    branches: [production]

jobs:
  laravel-test:
    name: Laravel test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: dom, curl, libxml, mbstring, zip, intl
          ini-values: post_max_size=256M, max_execution_time=180
          tools: php-cs-fixer, phpunit, composer:v2
          coverage: none    
      
      - name: Copiar .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Instalando as dependencias do Composer
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Gerar a chave do Laravel
        run: php artisan key:generate

      - name: Atribuindo Permissões aos Diretorios para o Laravel
        run: chmod -R 777 storage bootstrap/cache

      - name: Criando a Base de Dados para executar os testes
        run: |
          mkdir -p database
          touch database/database.sqlite
          
      - name: Executando os tests (Unit e Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit --verbose
      
  build-js-css:
    name: Compilar JS/CSS
    runs-on: ubuntu-latest
    needs: [laravel-test]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
            node-version: "12.x"

      - run: npm install
      - run: npm run production

      - name: Commit dos assets no git
        run: |
          git config --local user.email "action@gitgub.com"
          git config --local user.name "GitHub Action"
          git checkout -B deploy
          git add -f public/
          git commit -m "Copilado os assets do front-end"
          git push -f origin deploy

      - name: Deploy para o Servidor de Produção
        uses: appleboy/ssh-action@master
        with:
          username: code
          host: '134.209.173.56'
          key: ${{ secrets.SSH_PASSWORD }}
          script: 'cd ~/ && ./server_deploy.sh'
          #script: 'cd ~/ && ./server_deploy.sh'

  remover-branch:
    name: Remover a branch deploy
    runs-on: ubuntu-latest
    needs: [build-js-css]
    if: github.ref == 'refs/heads/production'
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PUSH_TOKEN }}
      
      - name: Removendo
        run: git push origin --delete deploy
