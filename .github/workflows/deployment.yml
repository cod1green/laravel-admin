name: Deploy
on:
  push:
    tags:
      - 'v*'

jobs:
  tests:
    name: PHP ${{ matrix.php }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [ '7.4', '8.0' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, mbstring, dom, fileinfo, mysql, zip, pcntl, pdo, sqlite, pdo_sqlite, iconv
          coverage: xdebug

      - name: Install composer dependencies
        run: composer install --ignore-platform-reqs --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate
          chmod -R 777 storage bootstrap/cache
          php artisan config:clear

      - name: Creating database to run the tests
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run Migration
        run: php artisan migrate -v
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite

      - name: Run PHP Codesniffer
        run: vendor/bin/phpcs

      - name: Run tests via PHPUnit
        run: vendor/bin/phpunit --verbose --coverage-text
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite

  build-js-css:
    name: Build JS/CSS
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - run: npm install
      - run: npm run production

      - name: Commit assets in git
        run: |
          git config --local user.email "action@gitgub.com"
          git config --local user.name "GitHub Action"
          git checkout -B deploy
          git add -f public/
          git commit -m "Add assets front-end"
          git push -f origin deploy

      - name: Deploy to the Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/deploy
            ./laravel_admin_deploy.sh

  remove-branch:
    name: Remove the deploy branch
    runs-on: ubuntu-latest
    needs: [ build-js-css ]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Removing
        run: git push origin --delete deploy
